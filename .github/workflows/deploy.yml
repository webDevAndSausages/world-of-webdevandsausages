name: Deploy

on:
  push:
    branches: [ "prod", "master" ]
  workflow_dispatch:

jobs:
  backend:
    name: Build and deploy backend
    runs-on: ubuntu-latest
    env:
      FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
      WORKSPACE: ${{ github.ref_name == 'master' && 'staging' || 'prod' }}
      COMMIT_SHA: ${{ github.sha }}
      PUBLIC_WDS_API_KEY: ${{ secrets.PUBLIC_WDS_API_KEY }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
    steps:
    - uses: actions/checkout@v3
    - name: Build the backend image
      run: docker build --build-arg AWS_SECRET_KEY="$AWS_SECRET_KEY" --build-arg AWS_ACCESS_KEY_ID="$AWS_ACCESS_KEY_ID" --build-arg PUBLIC_WDS_API_KEY="$PUBLIC_WDS_API_KEY" . --tag registry.fly.io/wds-backend-$WORKSPACE:$COMMIT_SHA
      working-directory: packages/wds-event-tool
    - name: Install flyctl
      run: sudo curl -L https://fly.io/install.sh | sh
    - name: Authenticate docker to push to fly.io
      run: /home/runner/.fly/bin/flyctl auth docker
    - name: Push docker image
      run: |
          docker push registry.fly.io/wds-backend-$WORKSPACE:$COMMIT_SHA
    - name: Set machine id to env
      run: |
          echo "MACHINE_ID=$(/home/runner/.fly/bin/flyctl machine list --app wds-backend-$WORKSPACE --json | jq '[.[]|.id][0]')" >> $GITHUB_ENV
    - name: Apply new image to fly machine
      run: |
          /home/runner/.fly/bin/flyctl machine update ${{ env.MACHINE_ID }} --image registry.fly.io/wds-backend-$WORKSPACE:$COMMIT_SHA --app wds-backend-$WORKSPACE -y
  db-backup-service:
    name: Build and deploy DB backup service
    runs-on: ubuntu-latest
    env:
      FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
      WORKSPACE: ${{ github.ref_name == 'master' && 'staging' || 'prod' }}
      COMMIT_SHA: ${{ github.sha }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
    steps:
      - uses: actions/checkout@v3
      - name: Build db backup image
        run: docker build --build-arg AWS_ACCESS_KEY_ID="$AWS_ACCESS_KEY_ID" --build-arg AWS_SECRET_ACCESS_KEY="$AWS_SECRET_KEY" --build-arg WORKSPACE="$WORKSPACE" --tag registry.fly.io/wds-db-backup-$WORKSPACE:$COMMIT_SHA -f ./dbBackup.Dockerfile .
        working-directory: packages/wds-event-tool
      - name: Install flyctl
        run: sudo curl -L https://fly.io/install.sh | sh
      - name: Authenticate docker to push to fly.io
        run: /home/runner/.fly/bin/flyctl auth docker
      - name: Push docker image
        run: |
          docker push registry.fly.io/wds-db-backup-$WORKSPACE:$COMMIT_SHA
      - name: Set machine id to env
        run: |
          echo "MACHINE_ID=$(/home/runner/.fly/bin/flyctl machine list --app wds-db-backup-$WORKSPACE --json | jq '[.[]|.id][0]')" >> $GITHUB_ENV
      - name: Apply new image to fly machine
        run: |
          /home/runner/.fly/bin/flyctl machine lease clear ${{ env.MACHINE_ID }} --verbose --app wds-db-backup-$WORKSPACE
          timeout 10 /home/runner/.fly/bin/flyctl machine update ${{ env.MACHINE_ID }} --verbose --image registry.fly.io/wds-db-backup-$WORKSPACE:$COMMIT_SHA ${{ github.ref_name == 'prod' && '--schedule hourly' || '' }} --skip-health-checks --app wds-db-backup-$WORKSPACE -y &
  frontend:
    name: Build and deploy frontend
    runs-on: ubuntu-latest
    env:
      FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
      WORKSPACE: ${{ github.ref_name == 'master' && 'staging' || 'prod' }}
      COMMIT_SHA: ${{ github.sha }}
      PUBLIC_WDS_API_KEY: ${{ secrets.PUBLIC_WDS_API_KEY }}
    steps:
      - uses: actions/checkout@v3
      - name: Build the image
        run: docker build --build-arg WORKSPACE="$WORKSPACE" --build-arg WDS_API_KEY="$PUBLIC_WDS_API_KEY" . --tag registry.fly.io/wds-frontend-$WORKSPACE:$COMMIT_SHA
        working-directory: packages/wds-site-v5
      - name: Install flyctl
        run: sudo curl -L https://fly.io/install.sh | sh
      - name: Authenticate docker to push to fly.io
        run: /home/runner/.fly/bin/flyctl auth docker
      - name: Push docker image
        run: docker push registry.fly.io/wds-frontend-$WORKSPACE:$COMMIT_SHA
      - name: Set machine id to env
        run: |
          echo "MACHINE_ID=$(/home/runner/.fly/bin/flyctl machine list --app wds-frontend-$WORKSPACE --json | jq '[.[]|.id][0]')" >> $GITHUB_ENV
      - name: Apply new image to fly machine
        run: /home/runner/.fly/bin/flyctl machine update ${{ env.MACHINE_ID }} --image registry.fly.io/wds-frontend-$WORKSPACE:$COMMIT_SHA --app wds-frontend-$WORKSPACE -y
